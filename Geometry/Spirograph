<html><head><base href="https://graeycowl.github.io/">
<title>Spirograph Animation Studio - websim.ai</title>
<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f0f0f0;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    color: #333;
  }
  header {
    background-color: #4a90e2;
    color: white;
    padding: 1rem;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  main {
    flex-grow: 1;
    display: flex;
    flex-direction: row;
    padding: 2rem;
    gap: 2rem;
  }
  #canvas-container {
    flex: 2;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }
  #controls {
    flex: 1;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
  }
  canvas {
    width: 100%;
    height: 100%;
    display: block;
  }
  label {
    display: block;
    margin-top: 1rem;
    font-weight: bold;
  }
  input[type="range"] {
    width: 100%;
    margin-top: 0.5rem;
  }
  button {
    background-color: #4a90e2;
    color: white;
    border: none;
    padding: 0.75rem 1rem;
    margin-top: 1rem;
    cursor: pointer;
    border-radius: 4px;
    transition: background-color 0.3s ease;
    font-size: 1rem;
  }
  button:hover {
    background-color: #3a7bc8;
  }
  footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 1rem;
    font-size: 0.9rem;
  }
  #presets {
    margin-top: 1rem;
  }
  #presets select {
    width: 100%;
    padding: 0.5rem;
    margin-top: 0.5rem;
    border-radius: 4px;
    border: 1px solid #ccc;
  }
</style>
</head>
<body>
  <header>
    <h1>Spirograph Animation Studio</h1>
  </header>
  <main>
    <div id="canvas-container">
      <canvas id="spirograph"></canvas>
    </div>
    <div id="controls">
      <h2>Controls</h2>
      <label for="outer-radius">Outer Radius: <span id="outer-radius-value">100</span></label>
      <input type="range" id="outer-radius" min="50" max="200" value="100">
      
      <label for="inner-radius">Inner Radius: <span id="inner-radius-value">50</span></label>
      <input type="range" id="inner-radius" min="10" max="100" value="50">
      
      <label for="offset">Offset: <span id="offset-value">80</span></label>
      <input type="range" id="offset" min="0" max="100" value="80">
      
      <label for="speed">Speed: <span id="speed-value">1</span></label>
      <input type="range" id="speed" min="0.1" max="5" value="1" step="0.1">
      
      <button id="color-toggle">Toggle Rainbow Mode</button>
      <button id="clear">Clear Canvas</button>
      <button id="fullscreen">Enter Fullscreen</button>
      
      <div id="presets">
        <label for="preset-select">Presets:</label>
        <select id="preset-select">
          <option value="default">Default</option>
          <option value="flower">Flower</option>
          <option value="star">Star</option>
          <option value="spiral">Spiral</option>
          <option value="waves">Waves</option>
        </select>
      </div>
    </div>
  </main>
  <footer>
    <p>&copy; 2023 Spirograph Animation Studio - A websim.ai project</p>
  </footer>

  <script>
    const canvas = document.getElementById('spirograph');
    const ctx = canvas.getContext('2d');
    const outerRadiusInput = document.getElementById('outer-radius');
    const innerRadiusInput = document.getElementById('inner-radius');
    const offsetInput = document.getElementById('offset');
    const speedInput = document.getElementById('speed');
    const colorToggle = document.getElementById('color-toggle');
    const clearButton = document.getElementById('clear');
    const fullscreenButton = document.getElementById('fullscreen');
    const presetSelect = document.getElementById('preset-select');

    let outerRadius = 100;
    let innerRadius = 50;
    let offset = 80;
    let speed = 1;
    let angle = 0;
    let isRainbowMode = false;
    let hue = 0;

    const presets = {
      default: { outerRadius: 100, innerRadius: 50, offset: 80, speed: 1 },
      flower: { outerRadius: 150, innerRadius: 75, offset: 60, speed: 1.5 },
      star: { outerRadius: 180, innerRadius: 40, offset: 100, speed: 2 },
      spiral: { outerRadius: 120, innerRadius: 30, offset: 90, speed: 0.5 },
      waves: { outerRadius: 160, innerRadius: 80, offset: 70, speed: 1.2 }
    };

    function updateCanvasSize() {
      canvas.width = canvas.offsetWidth;
      canvas.height = canvas.offsetHeight;
    }

    function drawSpirograph() {
      const centerX = canvas.width / 2;
      const centerY = canvas.height / 2;

      const x = centerX + (outerRadius - innerRadius) * Math.cos(angle) + offset * Math.cos(((outerRadius - innerRadius) / innerRadius) * angle);
      const y = centerY + (outerRadius - innerRadius) * Math.sin(angle) - offset * Math.sin(((outerRadius - innerRadius) / innerRadius) * angle);

      if (isRainbowMode) {
        ctx.strokeStyle = `hsl(${hue}, 100%, 50%)`;
        hue = (hue + 1) % 360;
      } else {
        ctx.strokeStyle = '#4a90e2';
      }

      ctx.beginPath();
      ctx.moveTo(x, y);
      ctx.lineTo(x, y);
      ctx.stroke();

      angle += speed * 0.02;
      requestAnimationFrame(drawSpirograph);
    }

    function updateValues() {
      outerRadius = parseInt(outerRadiusInput.value);
      innerRadius = parseInt(innerRadiusInput.value);
      offset = parseInt(offsetInput.value);
      speed = parseFloat(speedInput.value);

      document.getElementById('outer-radius-value').textContent = outerRadius;
      document.getElementById('inner-radius-value').textContent = innerRadius;
      document.getElementById('offset-value').textContent = offset;
      document.getElementById('speed-value').textContent = speed;
    }

    function applyPreset(presetName) {
      const preset = presets[presetName];
      outerRadiusInput.value = preset.outerRadius;
      innerRadiusInput.value = preset.innerRadius;
      offsetInput.value = preset.offset;
      speedInput.value = preset.speed;
      updateValues();
    }

    outerRadiusInput.addEventListener('input', updateValues);
    innerRadiusInput.addEventListener('input', updateValues);
    offsetInput.addEventListener('input', updateValues);
    speedInput.addEventListener('input', updateValues);

    colorToggle.addEventListener('click', () => {
      isRainbowMode = !isRainbowMode;
    });

    clearButton.addEventListener('click', () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    });

    fullscreenButton.addEventListener('click', () => {
      window.location.href = 'https://graeycowl.github.io/spirograph/fullscreen';
    });

    presetSelect.addEventListener('change', (e) => {
      applyPreset(e.target.value);
    });

    window.addEventListener('resize', updateCanvasSize);

    updateCanvasSize();
    updateValues();
    drawSpirograph();
  </script>
</body></html>

""